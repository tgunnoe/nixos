
# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4
set $term kitty
set $dropdown kitty --title=dropdown

exec_always 'pkill waybar; waybar -c /etc/xdg/waybar/config -s /etc/xdg/waybar/style.css'
set $menu dmenu_path | dmenu -b | xargs swaymsg exec --

exec_always $dropdown
### Outputs #############################################################

#output * bg @wall@ fill
#output DP-3 scale 0.75
output eDP-1 {
    resolution 2256x1504@60hz
#    position 1920,0
    scale 1.5
}
set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set $gnome-schema gtk-theme 'Adapta'
    gsettings set $gnome-schema icon-theme 'Papirus'
    gsettings set $gnome-schema cursor-theme 'Adwaita'
    gsettings set $gnome-schema font-name 'DejaVu Sans Mono'
}
#########################################################################

### Inputs ##############################################################
#@inputs@
input 1:1:AT_Translated_Set_2_keyboard {
      xkb_layout us(dvorak)
      xkb_variant ,nodeadkeys
      xkb_options ctrl:nocaps
}
input 6127:24814:Lenovo_TrackPoint_Keyboard_II {
      xkb_layout us(dvorak)
      xkb_variant ,nodeadkeys
      xkb_options ctrl:nocaps
      middle_emulation disabled
      tap enabled
      click_method none
      drag_lock disabled
      scroll_method on_button_down
      scroll_button disable

}
input 6127:24814:Lenovo_TrackPoint_Keyboard_II_Mouse {
      middle_emulation disabled
      tap enabled
      click_method none
      drag_lock disabled
      scroll_method on_button_down
      scroll_button disable
}
input 1739:30382:DLL0704:01_06CB:76AE_Touchpad {
    tap enabled
    natural_scroll disabled
    dwt enabled
}

    ### Tasks ###############################################################

# handle idle
exec swayidle -w \
        timeout 300 'swaylock-fancy' \
        timeout 600 'swaymsg "output * dpms off"' \
        after-resume 'swaymsg "output * dpms on"' \
        before-sleep 'swaylock-fancy'
# notifications
exec_always bash -c 'if [ $(pgrep mako) ]; then pkill mako ; fi ; mako'

# output handling
exec_always bash -c 'if [ $(pgrep kanshi) ]; then pkill kanshi ; fi ; kanshi'

exec_always --no-startup-id flashfocus
exec_always --no-startup-id autotiling
exec_always --no-startup-id i3-swallow

#########################################################################

set $black       #282828
set $darkblack   #1d2021
set $transparent #00000000

# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 1
default_floating_border pixel 1

# Hide borders
hide_edge_borders none

# change borders
bindsym $mod+g border none
bindsym $mod+c border pixel 1
bindsym $mod+l border normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:Ubuntu Regular 12

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+Shift+apostrophe kill

# start program launcher
#bindsym $mod+d exec --no-startup-id dmenu_recency
#bindsym $mod+d $menu
bindsym $mod+d exec --no-startup-id wofi --show run

# launch categorized menu
#bindsym $mod+semicolon exec --no-startup-id morc_menu

################################################################################################
## sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later! ##
################################################################################################

bindsym $mod+Ctrl+m exec pavucontrol

################################################################################################

# Screen brightness controls
bindsym XF86MonBrightnessUp exec "light -A 10; notify-send 'brightness up'"
bindsym XF86MonBrightnessDown exec "light -U 10; notify-send 'brightness down'"

# Start Applications
bindsym $mod+Ctrl+d exec $term -e 'bmenu'
bindsym $mod+F2 exec firefox
#bindsym $mod+F3 exec pcmanfm
bindsym $mod+F3 exec ranger
bindsym $mod+Shift+F3 exec gksu pcmanfm
#bindsym $mod+F5 exec $term -e 'mocp'
bindsym $mod+Shift+d --release exec "killall mako; exec notify-send 'restart mako'"
bindsym Print exec --no-startup-id i3-scrot
#bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
bindsym $mod+Shift+Print --release exec --no-startup-id i3-scrot -s
#bindsym $mod+Ctrl+x --release exec --no-startup-id xkill
#bindsym $mod+e exec emacsclient -c -n -e '(switch-to-buffer nil)'
bindsym $mod+e exec $term emacsclient -nw -e '(switch-to-buffer nil)' &

# focus_follows_mouse no

# change focus
bindsym $mod+b focus left
bindsym $mod+n focus down
bindsym $mod+p focus up
bindsym $mod+f focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+b move left
bindsym $mod+Shift+n move down
bindsym $mod+Shift+p move up
bindsym $mod+Shift+f move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+x workspace back_and_forth
bindsym $mod+Shift+x move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $mod+h split h;exec notify-send 'tile horizontally'
bindsym $mod+v split v;exec notify-send 'tile vertically'
bindsym $mod+apostrophe split toggle

# toggle fullscreen mode for the focused container
bindsym $mod+u fullscreen toggle

bindsym $mod+o layout stacking
bindsym $mod+comma layout tabbed
bindsym $mod+y layout toggle split

bindsym $mod+Shift+space floating toggle

bindsym $mod+space focus mode_toggle

bindsym $mod+Shift+s sticky toggle

bindsym $mod+a focus parent

bindsym $mod+Shift+grave move scratchpad

bindsym grave scratchpad show

bindsym $mod+Ctrl+f workspace next
bindsym $mod+Ctrl+b workspace prev

set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace 1; workspace 1
bindsym $mod+Shift+2 move container to workspace 2; workspace 2
bindsym $mod+Shift+3 move container to workspace 3; workspace 3
bindsym $mod+Shift+4 move container to workspace 4; workspace 4
bindsym $mod+Shift+5 move container to workspace 5; workspace 5
bindsym $mod+Shift+6 move container to workspace 6; workspace 6
bindsym $mod+Shift+7 move container to workspace 7; workspace 7
bindsym $mod+Shift+8 move container to workspace 8; workspace 8

workspace 1 output DP-2
workspace 2 output DP-2
workspace 3 output DP-2
workspace 4 output DP-2
# Open applications on specific workspaces
assign [class="Emacs"] 1
assign [class="Basilisk"] 2
assign [class="Firefox"] 2
assign [class="Pcmanfm"] 3
assign [class="Signal"] 4

for_window [title="dropdown"] move container to scratchpad
for_window [title="dropdown"] move absolute position 0 30#resize set 110 ppt 40 ppt
for_window [title="dropdown"] resize set 110 ppt 40 ppt
#for_window [title="dropdown"] move absolute position 0 30

# Open specific applications in floating mode
for_window [title="alsamixer"] floating enable border pixel 1
for_window [class="Calamares"] floating enable border normal
for_window [class="Clipgrab"] floating enable
for_window [title="File Transfer*"] floating enable
for_window [class="Galculator"] floating enable border pixel 1
for_window [class="GParted"] floating enable border normal
for_window [class="Lightdm-gtk-greeter-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [title="MuseScore: Play Panel"] floating enable
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Oblogout"] fullscreen enable
for_window [class="octopi"] floating enable
for_window [title="About Pale Moon"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="Skype"] floating enable border normal
for_window [class="Thus"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="Xfburn"] floating enable

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym t resize grow height 5 px or 5 ppt
        bindsym n resize shrink height 5 px or 5 ppt
        bindsym s resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Lock screen
bindsym $mod+9 exec --no-startup-id swaylock-fancy

# Autostart applications
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
#exec_always --no-startup-id mako
#exec --no-startup-id nm-applet --indicator
#exec --no-startup-id xfce4-power-manager
#exec --no-startup-id pamac-tray
# exec --no-startup-id clipit
#exec --no-startup-id blueman-applet
#exec_always --no-startup-id sbxkb
#exec --no-startup-id mpd
#exec_always redshift -v -l 37:-81 -m wayland
# exec --no-startup-id guake
#exec_always --no-startup-id ff-theme-util
#exec_always --no-startup-id fix_xcursor

# Start i3bar to display a workspace bar (plus the system information i3status if available)
# bar {
# 	i3bar_command i3bar -t
# 	status_command i3status
# 	position top

# ## please set your primary output first. Example: 'xrandr --output eDP1 --primary'
# 	tray_output primary
# #	tray_output eDP1
# 	tray_padding 0
# 	bindsym button4 nop
# 	bindsym button5 nop
# #   font xft:URWGothic-Book 11
# 	strip_workspace_numbers yes

#     colors {
#         background #283339
#         statusline #ffffff
#         separator  #454947

# #                          border       backgr.      text
#         focused_workspace  $transparent $black       $darkwhite
#         active_workspace   $transparent $black       $white
#         inactive_workspace $transparent $black       $darkwhite
#         binding_mode       $darkred     $darkred     $transparent
#         urgent_workspace   $darkred     $darkred     $transparent
#     }
# }

# hide/unhide i3status bar
bindsym $mod+m bar mode toggle

# Theme colors

#                       BORDER      BACKGROUND  TEXT        INDICATOR   CHILD_BORDER
# client.focused          $black      $black      $white      $black  $black
# client.unfocused        $black      $black      $white      $black  $black
# client.focused_inactive $black      $black      $white      $black  $black
# client.urgent           $darkred    $darkred    $black      $darkred    $darkred
# client.background $black

# class                   border  backgr. text    indic.   child_border
#  client.focused          #556064 #556064 #80FFF9 #FDF6E3
#  client.focused_inactive #2F3D44 #2F3D44 #1ABC9C #454948
#  client.unfocused        #2F3D44 #2F3D44 #1ABC9C #454948
#  client.urgent           #CB4B16 #FDF6E3 #1ABC9C #268BD2
#  client.placeholder      #000000 #0c0c0c #ffffff #000000

#  client.background       #2B2C2B

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 30
gaps outer 10

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#
# Extra config:
#
#@extraConfig@

exec "systemctl --user import-environment; systemctl --user start sway-session.target"
